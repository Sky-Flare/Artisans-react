# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

enum ActionCart {
    Add
    Remove
}

type Artisan {
    address: String!
    city: String!
    createdAt: DateTime!
    email: String!
    firstName: String!
    id: Float!
    lastName: String!
    products: [Product!]
    shops: [Shop!]
    updatedAt: DateTime!
    zipCode: Float!
}

type Cart {
    product: Product
    productId: Float!
    quantity: Float!
}

"""New category product"""
input CategoryProductInput {
    name: String!
    picture: String
    shopsIds: [Float!] = []
}

"""Update category product"""
input CategoryProductUpdate {
    categoryProductId: Float!
    shopsIds: [Float!] = []
}

"""New category shop"""
input CategoryShopInput {
    name: String!
    picture: String
}

type Category_product {
    id: Float!
    name: String!
    picture: String
    shops: [Shop!]
}

type Category_shop {
    id: Float!
    name: String!
    picture: String
}

type Client {
    address: String!
    cart: [Cart!]
    city: String!
    createdAt: DateTime!
    email: String!
    firstName: String!
    id: Float!
    lastName: String!
    updatedAt: DateTime!
    zipCode: Float!
}

input ConnectUser {
    email: String!
    password: String!
    role: Role!
}

"""New artisan data"""
input CreateArtisanInput {
    address: String!
    city: String!
    email: String!
    firstName: String!
    lastName: String!
    password: String!
    sirenNumber: String!
    zipCode: Float!
}

"""New client data"""
input CreateClientInput {
    address: String!
    city: String!
    email: String!
    firstName: String!
    lastName: String!
    password: String!
    zipCode: Float!
}

"""New product data"""
input CreateProductInput {
    categoriesProductsIds: [Float!]
    description: String!
    name: String!
    picture: String!
    price: Float!
    shopsIds: [Float!]
}

"""New shop data"""
input CreateShopInput {
    address: String!
    city: String!
    description: String!
    name: String!
    shopCategoriesIds: [Float!]!
    siretNumber: String!
    zipCode: Float!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

enum Days {
    Friday
    Monday
    Saturday
    Sunday
    Thursday
    Tuesday
    Wednesday
}

"""Get shops by categories id & zip code """
input GetShopCatIdsAndZipCode {
    categoriesIds: [Float!]

    """if null use zipCode user"""
    zipcode: [Float!]
}

type Horaire_shop {
    dayId: Float!
    id: Float!
    timeAmEnd: String
    timeAmStart: String
    timePmEnd: String
    timePmStart: String
}

input InputHoraireShop {
    dayId: Days
    timeAmEnd: String
    timeAmStart: String
    timePmEnd: String
    timePmStart: String
}

type LoginResponse {
    accessToken: String!
}

type Mutation {
    createCategoryProduct(categoryProductInput: CategoryProductInput!): Category_product!
    createCategoryShop(CategoryShopInput: CategoryShopInput!): Category_shop!
    createProduct(createProductInput: CreateProductInput!): Product
    createShop(CreateShopInput: CreateShopInput!, InputHoraireShop: [InputHoraireShop!]): Shop
    deleteArtisan: Boolean!
    deleteProduct(id: Float!): Boolean!
    moderateProduct(id: Float!, statusModeration: Float!): Boolean!
    moderateShop(id: Float!, statusModeration: Float!): Boolean!
    signIn(ConnectUser: ConnectUser!): LoginResponse
    signUpArtisan(CreateArtisanInput: CreateArtisanInput!): LoginResponse
    signUpClient(CreateClientInput: CreateClientInput!): LoginResponse
    updateArtisan(CreateArtisanInput: CreateArtisanInput!): Artisan!
    updateCart(UpdateCart: UpdateCart!): Cart
    updateCategoryProduct(categoryProductUpdate: CategoryProductUpdate!): Category_product
    updateProduct(createProductInput: UpdateProductInput!): Product
}

type Product {
    categoriesProducts: [Category_product!]
    description: String!
    enabled: Float!
    id: Float!
    name: String!
    picture: String!
    price: Float!
    shops: [Shop!]
}

"""Get products filters"""
input ProductsFilters {
    categoriesProductsIds: [Float!]
    shopId: Float!
}

type Query {
    """Return on artisan"""
    artisan(artisanId: Float!): Artisan

    """Return all artisans"""
    artisans: [Artisan!]
    categories_productByShop(shopId: Float!): [Category_product!]!
    categories_shop: [Category_shop!]!
    clientCart: [Cart!]
    meArtisan: Artisan
    meClient: Client
    products(filtersProducts: ProductsFilters!): [Product!]
    shop(shopId: Float!): Shop
    shops(filtersInput: GetShopCatIdsAndZipCode): [Shop!]
}

enum Role {
    ADMIN
    ARTISAN
    CLIENT
    OWNER
}

type Shop {
    address: String!
    artisan: Artisan!
    categoriesProducts: [Category_product!]
    categoriesShops: [Category_shop!]!
    city: String!
    createdAt: DateTime!
    description: String!
    enabled: Float!
    horaireShop: [Horaire_shop!]
    id: Float!
    name: String!
    updatedAt: DateTime!
    zipCode: Float!
}

"""Cart client"""
input UpdateCart {
    action: ActionCart!
    productId: Float!
    quantity: Float!
}

"""Update product data"""
input UpdateProductInput {
    categoriesProductsIds: [Float!]
    description: String!
    name: String!
    picture: String!
    price: Float!
    productId: Float!
    shopsIds: [Float!]
}

type User {
    createdAt: DateTime!
    firstName: String!
    id: Float!
    lastName: String!
    updatedAt: DateTime!
}